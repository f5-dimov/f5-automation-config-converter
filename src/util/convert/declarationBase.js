/**
 * Copyright 2021 F5 Networks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use strict';

const uuid = require('uuid').v4;

const as3Schema = require('../../../autotoolDeps/AS3/src/schema/latest/adc-schema.json');
const { name, version } = require('../../../package.json');

const as3Version = as3Schema.properties.schemaVersion.enum[1];

module.exports = {
    AS3: (config) => {
        const declaration = {
            class: 'ADC',
            schemaVersion: as3Version,
            id: `urn:uuid:${uuid()}`,
            label: 'Converted Declaration',
            remark: 'Generated by Automation Config Converter'
        };

        if (config && config.controls) {
            declaration.controls = {
                class: 'Controls',
                trace: true,
                logLevel: 'debug'
            };
        }

        return declaration;
    },

    DO: (config) => {
        const declaration = {
            schemaVersion: '1.0.0',
            class: 'Device',
            async: true,
            Common: {
                class: 'Tenant'
            }
        };

        if (config && config.controls) {
            declaration.controls = {
                class: 'Controls',
                userAgent: `${name.toUpperCase()}/${version}`,
                trace: true,
                traceResponse: true,
                dryRun: false
            };
        }

        return declaration;
    }
};
