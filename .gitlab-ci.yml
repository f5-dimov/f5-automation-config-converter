image: $ATG_IMG_REGISTRY_URL/node:lts

stages:
  - update
  - atg-shared-checks
  - test
  - docs
  - build
  - publish
  - container_scan

variables:
  SEC_ALLOW_FAILURE: "true"
  SEC_NO_GIT_HISTORY: "true"

include:
  - project: automation-toolchain/atg-shared-templates
    ref: v1.1.2
    file:
      - code_quality/base.gitlab-ci.yml
      - compliance/base.gitlab-ci.yml
      - security/base.gitlab-ci.yml
      - security/container.gitlab-ci.yml
      - test/base.gitlab-ci.yml

# UPDATE #
# only pipelines on 'develop' should check for new changes
update_autotool_deps:
  stage: update
  only: [develop]
  needs: []
  variables:
    UPDATE_BRANCH_NAME: update_autotool_deps
  script:
    - . ./scripts/dev/update-acc-deps.sh
    - . ./scripts/dev/update-from-as3.sh
    - . ./scripts/dev/update-from-do.sh
    - >
      if [ "$AUTOTOOL_DIFF" = "true" ]; then
        git push -f origin ${UPDATE_BRANCH_NAME}
        node ./scripts/dev/createMR.js
      fi
  tags: [cm-official-docker-executor]

# Coverage reports
pages:
  stage: docs
  only: [develop]
  needs: [coverage]
  tags: [cm-official-docker-executor]
  variables:
    COVERAGE_DOCS: public/coverage-docs
  script:
    - mkdir -p ${COVERAGE_DOCS}
    - cp -R coverage/* ${COVERAGE_DOCS}
  artifacts:
    paths: [public]

# BUILD #
build_docs:
  image: $CONTAINTHEDOCS_IMAGE
  stage: build
  needs: []
  script:
    - cd docs
    - pip3 install -r requirements.txt
    - >
      if [ "$CI_COMMIT_REF_NAME" = "docs-staging" ] || [ "$CI_COMMIT_REF_NAME" = "docs-latest" ]; then
        rm -r _templates
      fi
    - npm ci
    - make html
    - make test
  artifacts:
    expire_in: 1 week
    name: sphinx-docs_$CI_BUILD_REF
    paths: [docs/_build/html]
  tags: [cm-official-docker-executor]

build_image:
  image: $ATG_IMG_REGISTRY_URL/docker:20
  stage: build
  needs: []
  script:
    - source scripts/build/image-build.sh
  artifacts:
    name: $CI_PROJECT_NAME-$CI_BUILD_REF
    paths: [dist/]
  tags: [cm-official-docker-executor]

pack_code:
  stage: build
  needs: []
  script:
    - source scripts/build/pack-code.sh
  artifacts:
    name: $CI_PROJECT_NAME-$CI_BUILD_REF
    paths: [dist/]
  tags: [cm-official-docker-executor]

# PUBLISH #
publish_image:
  retry: 2
  image: $ATG_IMG_REGISTRY_URL/docker:20
  stage: publish
  needs: [build_image, pack_code]
  script:
    - apk --no-cache add curl
    - source scripts/publish/image-publish.sh
  tags: [cm-official-docker-executor]

publish_docs:
  image: $CONTAINTHEDOCS_IMAGE
  stage: publish
  needs: [build_docs]
  only: [main]
  environment:
    name: production
    url: https://clouddocs.f5.com/products/extensions/f5-automation-config-converter/latest/
  script:
    - aws s3 sync docs/_build/html s3://clouddocs.f5.com/products/extensions/f5-automation-config-converter/latest
    # create invalidation to clear cloudfront cache
    - aws cloudfront create-invalidation --distribution-id $AWS_DIST --paths /products/extensions/f5-automation-config-converter/latest
  tags: [cm-official-docker-executor]
